---
http_interactions:
- request:
    method: get
    uri: https://www.iso.org/cms/render/live/en/sites/isoorg.advancedSearch.do?docNumber=22934&status=ENT_ACTIVE,ENT_PROGRESS,ENT_INACTIVE,ENT_DELETED
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json, text/plain, */*
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: ''
    headers:
      Expires:
      - Wed, 09 May 1979 05:30:00 GMT
      Cache-Control:
      - no-cache, no-store, must-revalidate, proxy-revalidate, max-age=0
      Pragma:
      - no-cache
      Set-Cookie:
      - BIGipServerpool_prod_iso_www-jahia=713576842.36895.0000; path=/; Httponly;
        Secure
      - JSESSIONID=32317C537F8319678364CBCD4AA21C96; Path=/; Secure; HttpOnly
      Vary:
      - accept-encoding
      Content-Type:
      - application/json;charset=UTF-8
      Transfer-Encoding:
      - chunked
      Date:
      - Fri, 14 May 2021 10:03:32 GMT
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJzdGFuZGFyZHMiOlt7ImNzbnVtYmVyIjo3NDE5NywicHJpY2VHcm91cCI6IkEiLCJwdWJsaWNhdGlvblN0YXR1cyI6eyJ0cmFuc2xhdGlvbnMiOnsicnUiOiJVbmRlciBkZXZlbG9wbWVudCIsImVuIjoiVW5kZXIgZGV2ZWxvcG1lbnQiLCJmciI6IlByb2pldCJ9LCJrZXkiOiJFTlRfUFJPR1JFU1MifSwicHJvZHNBdmFpbGFibGUiOmZhbHNlLCJjb21taXR0ZWUiOnsicmVmZXJlbmNlIjoiSVNPL1RDIDEzMCIsInNvcnRLZXkiOiJJU08vVEMgMTMwIiwiZmllbGQiOnsidHJhbnNsYXRpb25zIjp7InJ1IjoiVGVjaG5pY2FsIiwiZW4iOiJUZWNobmljYWwiLCJmciI6IlRlY2huaXF1ZSJ9LCJrZXkiOiJURUNITklDQUwifSwibGV2ZWwiOnsidHJhbnNsYXRpb25zIjp7InJ1IjoiTWFpbiBjb21taXR0ZWUiLCJlbiI6Ik1haW4gY29tbWl0dGVlIiwiZnIiOiJDb21pdMOpIn0sImtleSI6Ik1BSU5fQ09NTUlUVEVFIn0sInNwbGl0UGF0aCI6Ii8wNS8yMiIsImlkIjo1MjIxNCwidGl0bGUiOnsidHJhbnNsYXRpb25zIjp7InJ1IjoiR3JhcGhpYyB0ZWNobm9sb2d5IiwiZW4iOiJHcmFwaGljIHRlY2hub2xvZ3kiLCJmciI6IlRlY2hub2xvZ2llIGdyYXBoaXF1ZSJ9LCJrZXkiOiJUSVRMRSJ9LCJzZWN0b3IiOnsidHJhbnNsYXRpb25zIjp7InJ1IjoiSW5mb3JtYXRpb24gdGVjaG5vbG9neSwgZ3JhcGhpY3MgYW5kIHBob3RvZ3JhcGh5IiwiZW4iOiJJbmZvcm1hdGlvbiB0ZWNobm9sb2d5LCBncmFwaGljcyBhbmQgcGhvdG9ncmFwaHkiLCJmciI6IlRlY2hub2xvZ2llcyBkZSBsXHUyMDE5aW5mb3JtYXRpb24sIGdyYXBoaXF1ZXMgZXQgcGhvdG9ncmFwaGllIn0sImtleSI6IklORk9STUFUSU9OX1BST0NFU1NJTkdfR1JBUEhJQ1NfUEhPVE9HUkFQSFlfQU5EX1NFUlZJQ0VTIn0sInN0YXR1cyI6eyJ0cmFuc2xhdGlvbnMiOnsicnUiOiJBY3RpdmUiLCJlbiI6IkFjdGl2ZSIsImZyIjoiQWN0aXZlIn0sImtleSI6IkVOVF9BQ1RJVkUifX0sInNkZ0NvdW50IjoxLCJhYnN0cmFjdHMiOnsidHJhbnNsYXRpb25zIjp7fSwia2V5IjoiQUJTVFJBQ1QifSwiZG9jTnVtYmVyIjoyMjkzNCwiZG9jVHlwZSI6MTAsImRvY0VkaXRpb24iOjEsIm5ld1Byb2plY3REYXRlIjoiMjAxNy0xMC0xNiAwMDowMDowMC4wIiwic3BsaXRQYXRoIjoiLzA3LzQxIiwiZG9jRWxlbSI6IjAiLCJ0aXRsZSI6eyJ0cmFuc2xhdGlvbnMiOnsicnUiOiJHcmFwaGljIHRlY2hub2xvZ3kgXHUyMDE0IENvbW11bmljYXRpb24gb2Ygb2Zmc2V0IGluayBwcm9wZXJ0aWVzIiwiZW4iOiJHcmFwaGljIHRlY2hub2xvZ3kgXHUyMDE0IENvbW11bmljYXRpb24gb2Ygb2Zmc2V0IGluayBwcm9wZXJ0aWVzIiwiZnIiOiJUZWNobm9sb2dpZSBncmFwaGlxdWUgXHUyMDE0IENvbW11bmljYXRpb24gZGVzIHByb3ByacOpdMOpcyBkZSBsJ2VuY3JlIG9mZnNldCJ9LCJrZXkiOiJUSVRMRSJ9LCJ1cm4iOnsiZW4iOiJpc286c3RkOjc0MTk3OmVuIiwiZnIiOiJpc286c3RkOjc0MTk3OmZyIn0sInN0YWdlU3RhcnQiOiIyMDIxLTA0LTI4IiwiZG9jRWxlbVNlcSI6MCwiZG9jUmVmIjoiSVNPIDIyOTM0Iiwic2RnIjpbeyJ0cmFuc2xhdGlvbnMiOnsicnUiOiLQntGC0LLQtdGC0YHRgtCy0LXQvdC90L7QtSDQv9C+0YLRgNC10LHQu9C10L3QuNC1INC4INC/0YDQvtC40LfQstC+0LTRgdGC0LLQviIsImVuIjoiUmVzcG9uc2libGUgQ29uc3VtcHRpb24gYW5kIFByb2R1Y3Rpb24iLCJmciI6IkNvbnNvbW1hdGlvbiBldCBwcm9kdWN0aW9uIHJlc3BvbnNhYmxlcyJ9LCJrZXkiOiJTREcxMiJ9XSwiaWNzIjpbeyJ0cmFuc2xhdGlvbnMiOnsicnUiOiJJbmtzLiBQcmludGluZyBpbmtzIiwiZW4iOiJJbmtzLiBQcmludGluZyBpbmtzIiwiZnIiOiJFbmNyZXMuIEVuY3JlcyBkJ2ltcHJpbWVyaWUifSwia2V5IjoiODcuMDgwIn1dLCJzdGFnZXMiOlt7InN0YWdlU3RhcnQiOiIyMDE3LTEwLTE2Iiwic3RhZ2VJZCI6IjEwLjk5In0seyJzdGFnZVN0YXJ0IjoiMjAxNy0xMC0xNiIsInN0YWdlSWQiOiIyMC4wMCJ9LHsic3RhZ2VTdGFydCI6IjIwMTctMTAtMTYiLCJzdGFnZUlkIjoiMjAuMjAifSx7InN0YWdlU3RhcnQiOiIyMDE5LTAyLTExIiwic3RhZ2VJZCI6IjMwLjAwIn0seyJzdGFnZVN0YXJ0IjoiMjAxOS0wMi0xMiIsInN0YWdlSWQiOiIzMC4yMCJ9LHsic3RhZ2VTdGFydCI6IjIwMTktMDQtMTAiLCJzdGFnZUlkIjoiMzAuNjAifSx7InN0YWdlU3RhcnQiOiIyMDE5LTA3LTI1Iiwic3RhZ2VJZCI6IjMwLjkyIn0seyJzdGFnZVN0YXJ0IjoiMjAxOS0wNy0yNSIsInN0YWdlSWQiOiIzMC4wMCJ9LHsic3RhZ2VTdGFydCI6IjIwMTktMDctMjYiLCJzdGFnZUlkIjoiMzAuMjAifSx7InN0YWdlU3RhcnQiOiIyMDE5LTA5LTIxIiwic3RhZ2VJZCI6IjMwLjYwIn0seyJzdGFnZVN0YXJ0IjoiMjAxOS0xMS0xNCIsInN0YWdlSWQiOiIzMC45OSJ9LHsic3RhZ2VTdGFydCI6IjIwMTktMTEtMTQiLCJzdGFnZUlkIjoiNDAuMDAifSx7InN0YWdlU3RhcnQiOiIyMDIwLTAxLTE2Iiwic3RhZ2VJZCI6IjQwLjIwIn0seyJzdGFnZVN0YXJ0IjoiMjAyMC0wNC0xMCIsInN0YWdlSWQiOiI0MC42MCJ9LHsic3RhZ2VTdGFydCI6IjIwMjEtMDItMDciLCJzdGFnZUlkIjoiNDAuOTkifSx7InN0YWdlU3RhcnQiOiIyMDIxLTAyLTA4Iiwic3RhZ2VJZCI6IjUwLjAwIn0seyJzdGFnZVN0YXJ0IjoiMjAyMS0wMy0wMiIsInN0YWdlSWQiOiI1MC4yMCJ9LHsic3RhZ2VTdGFydCI6IjIwMjEtMDQtMjgiLCJzdGFnZUlkIjoiNTAuNjAifSx7InN0YWdlU3RhcnQiOiIyMDIxLTA0LTI4Iiwic3RhZ2VJZCI6IjYwLjAwIn0seyJzdGFnZUlkIjoiNjAuNjAifV0sInB1YmxpY2F0aW9uRGF0ZSI6IjIwMjEtMDUiLCJzdGFnZUlkIjoiNjAuMDAifV19
  recorded_at: Fri, 14 May 2021 10:03:33 GMT
- request:
    method: get
    uri: https://www.iso.org/contents/data/standard/07/41/74197.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.iso.org
  response:
    status:
      code: 301
      message: ''
    headers:
      Expires:
      - Wed, 09 May 1979 05:30:00 GMT
      Cache-Control:
      - no-cache, no-store, must-revalidate, proxy-revalidate, max-age=0
      Pragma:
      - no-cache
      Set-Cookie:
      - BIGipServerpool_prod_iso_www-jahia=730354058.36895.0000; path=/; Httponly;
        Secure
      - JSESSIONID=8D0EBF4C67688A67D9EB6DB9A1C908B3; Path=/; Secure; HttpOnly
      Location:
      - "/standard/74197.html"
      Content-Length:
      - '0'
      Date:
      - Fri, 14 May 2021 10:03:33 GMT
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains
    body:
      encoding: UTF-8
      string: ''
  recorded_at: Fri, 14 May 2021 10:03:33 GMT
- request:
    method: get
    uri: https://www.iso.org/standard/74197.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.iso.org
  response:
    status:
      code: 200
      message: ''
    headers:
      Expires:
      - Wed, 09 May 1979 05:30:00 GMT
      Cache-Control:
      - no-cache, no-store, must-revalidate, proxy-revalidate, max-age=0
      Pragma:
      - no-cache
      Set-Cookie:
      - BIGipServerpool_prod_iso_www-jahia=713576842.36895.0000; path=/; Httponly;
        Secure
      - JSESSIONID=E804163725335D1436FACAB0261893A1; Path=/; Secure; HttpOnly
      Vary:
      - accept-encoding
      Content-Type:
      - text/html;charset=UTF-8
      Transfer-Encoding:
      - chunked
      Date:
      - Fri, 14 May 2021 10:03:34 GMT
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Fri, 14 May 2021 10:03:35 GMT
- request:
    method: get
    uri: https://www.iso.org/fr/standard/74197.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.iso.org
  response:
    status:
      code: 200
      message: ''
    headers:
      Expires:
      - Wed, 09 May 1979 05:30:00 GMT
      Cache-Control:
      - no-cache, no-store, must-revalidate, proxy-revalidate, max-age=0
      Pragma:
      - no-cache
      Set-Cookie:
      - BIGipServerpool_prod_iso_www-jahia=730354058.36895.0000; path=/; Httponly;
        Secure
      - JSESSIONID=B0310CF797CFCB2DE96DEEC931E42B64; Path=/; Secure; HttpOnly
      Vary:
      - accept-encoding
      Content-Type:
      - text/html;charset=UTF-8
      Transfer-Encoding:
      - chunked
      Date:
      - Fri, 14 May 2021 10:03:36 GMT
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Fri, 14 May 2021 10:03:36 GMT
recorded_with: VCR 6.0.0
